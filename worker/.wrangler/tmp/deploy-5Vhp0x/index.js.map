{
  "version": 3,
  "sources": ["../../../node_modules/itty-router/index.mjs", "../../../src/index.ts"],
  "sourceRoot": "C:\\Users\\Okedi\\pinterest-plugin\\worker\\.wrangler\\tmp\\deploy-5Vhp0x",
  "sourcesContent": ["const e=({base:e=\"\",routes:t=[],...r}={})=>({__proto__:new Proxy({},{get:(r,o,a,s)=>(r,...c)=>t.push([o.toUpperCase(),RegExp(`^${(s=(e+r).replace(/\\/+(\\/|$)/g,\"$1\")).replace(/(\\/?\\.?):(\\w+)\\+/g,\"($1(?<$2>*))\").replace(/(\\/?\\.?):(\\w+)/g,\"($1(?<$2>[^$1/]+?))\").replace(/\\./g,\"\\\\.\").replace(/(\\/?)\\*/g,\"($1.*)?\")}/*$`),c,s])&&a}),routes:t,...r,async fetch(e,...r){let o,a,s=new URL(e.url),c=e.query={__proto__:null};for(let[e,t]of s.searchParams)c[e]=c[e]?[].concat(c[e],t):t;for(let[c,n,l,i]of t)if((c==e.method||\"ALL\"==c)&&(a=s.pathname.match(n))){e.params=a.groups||{},e.route=i;for(let t of l)if(null!=(o=await t(e.proxy??e,...r)))return o}}}),t=({base:e=\"\",routes:t=[],...r}={})=>({__proto__:new Proxy({},{get:(r,o,a,s)=>(r,...c)=>t.push([o.toUpperCase?.(),RegExp(`^${(s=(e+r).replace(/\\/+(\\/|$)/g,\"$1\")).replace(/(\\/?\\.?):(\\w+)\\+/g,\"($1(?<$2>*))\").replace(/(\\/?\\.?):(\\w+)/g,\"($1(?<$2>[^$1/]+?))\").replace(/\\./g,\"\\\\.\").replace(/(\\/?)\\*/g,\"($1.*)?\")}/*$`),c,s])&&a}),routes:t,...r,async fetch(e,...o){let a,s,c=new URL(e.url),n=e.query={__proto__:null};for(let[e,t]of c.searchParams)n[e]=n[e]?[].concat(n[e],t):t;e:try{for(let t of r.before||[])if(null!=(a=await t(e.proxy??e,...o)))break e;t:for(let[r,n,l,i]of t)if((r==e.method||\"ALL\"==r)&&(s=c.pathname.match(n))){e.params=s.groups||{},e.route=i;for(let t of l)if(null!=(a=await t(e.proxy??e,...o)))break t}}catch(t){if(!r.catch)throw t;a=await r.catch(t,e.proxy??e,...o)}try{for(let t of r.finally||[])a=await t(a,e.proxy??e,...o)??a}catch(t){if(!r.catch)throw t;a=await r.catch(t,e.proxy??e,...o)}return a}}),r=(e=\"text/plain; charset=utf-8\",t)=>(r,o={})=>{if(void 0===r||r instanceof Response)return r;const a=new Response(t?.(r)??r,o.url?void 0:o);return a.headers.set(\"content-type\",e),a},o=r(\"application/json; charset=utf-8\",JSON.stringify),a=e=>({400:\"Bad Request\",401:\"Unauthorized\",403:\"Forbidden\",404:\"Not Found\",500:\"Internal Server Error\"}[e]||\"Unknown Error\"),s=(e=500,t)=>{if(e instanceof Error){const{message:r,...o}=e;e=e.status||500,t={error:r||a(e),...o}}return t={status:e,...\"object\"==typeof t?t:{error:t||a(e)}},o(t,{status:e})},c=e=>{e.proxy=new Proxy(e.proxy??e,{get:(t,r)=>t[r]?.bind?.(e)??t[r]??t?.params?.[r]})},n=({format:e=o,missing:r=(()=>s(404)),finally:a=[],before:n=[],...l}={})=>t({before:[c,...n],catch:s,finally:[(e,...t)=>e??r(...t),e,...a],...l});class l extends Error{status;constructor(e=500,t){super(\"object\"==typeof t?t.error:t),\"object\"==typeof t&&Object.assign(this,t),this.status=e}}const i=(e,t)=>new Response(null,{...t,status:e}),p=r(\"text/plain; charset=utf-8\",String),f=r(\"text/html\"),u=r(\"image/jpeg\"),h=r(\"image/png\"),g=r(\"image/webp\"),d=async e=>{e.content=e.body?await e.clone().json().catch((()=>e.clone().formData())).catch((()=>e.text())):void 0},w=e=>{e.cookies=(e.headers.get(\"Cookie\")||\"\").split(/;\\s*/).map((e=>e.split(/=(.+)/))).reduce(((e,[t,r])=>r?(e[t]=r,e):e),{})},y=(e={})=>{const{origin:t=\"*\",credentials:r=!1,allowMethods:o=\"*\",allowHeaders:a,exposeHeaders:s,maxAge:c}=e,n=e=>{const o=e?.headers.get(\"origin\");return!0===t?o:t instanceof RegExp?t.test(o)?o:void 0:Array.isArray(t)?t.includes(o)?o:void 0:t instanceof Function?t(o):\"*\"==t&&r?o:t},l=(e,t)=>{for(const[r,o]of Object.entries(t))o&&e.headers.append(r,o);return e};return{corsify:(e,t)=>e?.headers?.get(\"access-control-allow-origin\")||101==e.status?e:l(e.clone(),{\"access-control-allow-origin\":n(t),\"access-control-allow-credentials\":r}),preflight:e=>{if(\"OPTIONS\"==e.method){const t=new Response(null,{status:204});return l(t,{\"access-control-allow-origin\":n(e),\"access-control-allow-methods\":o?.join?.(\",\")??o,\"access-control-expose-headers\":s?.join?.(\",\")??s,\"access-control-allow-headers\":a?.join?.(\",\")??a??e.headers.get(\"access-control-request-headers\"),\"access-control-max-age\":c,\"access-control-allow-credentials\":r})}}}};export{n as AutoRouter,e as IttyRouter,t as Router,l as StatusError,y as cors,r as createResponse,s as error,f as html,u as jpeg,o as json,h as png,i as status,p as text,g as webp,d as withContent,w as withCookies,c as withParams};\n", "import { IttyRouter, json, status } from 'itty-router'\r\n\r\n// Define the environment variables that the worker will need.\r\n// The user will need to set these in their Cloudflare dashboard.\r\nexport interface Env {\r\n\tPINTEREST_CLIENT_ID: string\r\n\tPINTEREST_CLIENT_SECRET: string\r\n\tPLUGIN_URI: string // The URI of the Framer plugin\r\n\tPINTEREST_OAUTH_KV: KVNamespace\r\n}\r\n\r\nconst router = IttyRouter()\r\n\r\n// Helper function to handle CORS preflight requests.\r\nconst handleCors = (request: Request) => {\r\n    const headers = {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type',\r\n    };\r\n    if (request.method === 'OPTIONS') {\r\n        return new Response(null, { headers });\r\n    }\r\n    // This is not a preflight request, so we let the router handle it.\r\n    // This function is only for the OPTIONS method.\r\n    return;\r\n}\r\n\r\n// Helper to add CORS headers to a response\r\nconst withCors = (response: Response) => {\r\n    response.headers.set('Access-Control-Allow-Origin', '*');\r\n    return response;\r\n}\r\n\r\n// Handle CORS preflight requests\r\nrouter.options('/authorize', handleCors)\r\nrouter.options('/poll', handleCors)\r\n\r\n\r\n// The /authorize endpoint is called by the Framer plugin to start the OAuth flow.\r\nrouter.post('/authorize', async (request, env: Env) => {\r\n\tconst readKey = crypto.randomUUID()\r\n\tconst writeKey = crypto.randomUUID()\r\n\r\n\t// Store the writeKey in the KV store, associated with the readKey.\r\n\t// The token will be stored against the writeKey later.\r\n\tawait env.PINTEREST_OAUTH_KV.put(readKey, writeKey, { expirationTtl: 300 }) // 5 minute expiry\r\n\r\n\tconst params = new URLSearchParams({\r\n\t\tclient_id: env.PINTEREST_CLIENT_ID,\r\n\t\tredirect_uri: `${env.PLUGIN_URI}/callback`,\r\n\t\tresponse_type: 'code',\r\n\t\tscope: 'boards:read,pins:read',\r\n\t\tstate: writeKey, // Use the writeKey as the state to prevent CSRF\r\n\t})\r\n\r\n\tconst authorizationUrl = `https://www.pinterest.com/oauth/?${params.toString()}`\r\n\r\n\tconst response = json({\r\n\t\turl: authorizationUrl,\r\n\t\treadKey,\r\n\t})\r\n    return withCors(response);\r\n})\r\n\r\n// The /callback endpoint is where Pinterest redirects the user after they authorize the app.\r\nrouter.get('/callback', async (request, env: Env) => {\r\n\tconst { searchParams } = new URL(request.url)\r\n\tconst code = searchParams.get('code')\r\n\tconst state = searchParams.get('state') // This is our writeKey\r\n\r\n\tif (!code || !state) {\r\n\t\treturn withCors(new Response('Missing authorization code or state.', { status: 400 }))\r\n\t}\r\n\r\n\t// Exchange the authorization code for an access token\r\n\tconst tokenResponse = await fetch('https://api.pinterest.com/v5/oauth/token', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\r\n\t\t\tAuthorization: `Basic ${btoa(`${env.PINTEREST_CLIENT_ID}:${env.PINTEREST_CLIENT_SECRET}`)}`,\r\n\t\t},\r\n\t\tbody: new URLSearchParams({\r\n\t\t\tgrant_type: 'authorization_code',\r\n\t\t\tcode,\r\n\t\t\tredirect_uri: `${env.PLUGIN_URI}/callback`,\r\n\t\t}),\r\n\t})\r\n\r\n\tif (!tokenResponse.ok) {\r\n\t\tconst errorText = await tokenResponse.text()\r\n\t\tconsole.error('Failed to get access token:', errorText)\r\n\t\treturn withCors(new Response('Failed to get access token.', { status: 500 }))\r\n\t}\r\n\r\n\tconst { access_token } = await tokenResponse.json()\r\n\r\n\t// Store the access token in the KV store, against the writeKey (state).\r\n\tawait env.PINTEREST_OAUTH_KV.put(state, JSON.stringify({ access_token }), { expirationTtl: 300 })\r\n\r\n\tconst response = new Response('Authentication successful! You can now close this window.', {\r\n\t\theaders: { 'Content-Type': 'text/html' },\r\n\t})\r\n    return withCors(response);\r\n})\r\n\r\n// The /poll endpoint is called by the Framer plugin to get the access token.\r\nrouter.post('/poll', async (request, env: Env) => {\r\n\tconst { readKey } = await request.json()\r\n\tif (!readKey) {\r\n\t\treturn withCors(new Response('Missing readKey', { status: 400 }))\r\n\t}\r\n\r\n\t// Get the writeKey associated with the readKey\r\n\tconst writeKey = await env.PINTEREST_OAUTH_KV.get(readKey)\r\n\tif (!writeKey) {\r\n\t\treturn withCors(new Response('Invalid or expired readKey', { status: 404 }))\r\n\t}\r\n\r\n\t// Get the token data associated with the writeKey\r\n\tconst tokenData = await env.PINTEREST_OAUTH_KV.get(writeKey)\r\n\tif (!tokenData) {\r\n\t\t// The user has not authenticated yet.\r\n\t\treturn withCors(status(204)) // No Content\r\n\t}\r\n\r\n\t// Token found, return it and delete the keys from KV\r\n\tawait env.PINTEREST_OAUTH_KV.delete(readKey)\r\n\tawait env.PINTEREST_OAUTH_KV.delete(writeKey)\r\n\r\n\treturn withCors(json(JSON.parse(tokenData)))\r\n})\r\n\r\n// Standard Cloudflare Worker entry point\r\nexport default {\r\n\tfetch: (request: Request, env: Env, ctx: ExecutionContext) =>\r\n\t\trouter\r\n            .handle(request, env, ctx)\r\n            .catch(error => {\r\n                console.error(error)\r\n                return withCors(new Response('Internal Server Error', { status: 500 }))\r\n            }),\r\n}\r\n"],
  "mappings": "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",
  "names": ["e", "r", "o", "t", "c", "i", "e", "r", "o", "e"]
}
